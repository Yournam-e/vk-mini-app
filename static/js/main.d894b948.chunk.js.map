{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","list","from","mess","class","useState","setMess","header","mode","before","photo_200","src","description","city","title","first_name","last_name","className","map","el","type","onChange","e","target","value","placeholder","style","width","onClick","add","console","log","Persik","props","left","persik","App","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d894b948.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, FormItem, Input, FormLayoutGroup } from '@vkontakte/vkui';\nimport { Icon24Send } from '@vkontakte/icons';\nimport './Home.css';\n\n\n\n\n\n\nconst Home = ({ id, go, fetchedUser}) => {\n\n\n\tconst list = {\n\t\tlist:[\n\t\t\t{\n\t\t\t\tfrom: \"anon\",\n\t\t\t\tmess: \"привет!\",\n\t\t\t\tclass: \"a\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"me\",\n\t\t\t\tmess: \"привет\",\n\t\t\t\tclass: 'b'\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"anon\",\n\t\t\t\tmess: \"что-то хотел?\",\n\t\t\t\tclass: \"b\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"anon\",\n\t\t\t\tmess: \"да  \",\n\t\t\t\tclass: \"a\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"anon\",\n\t\t\t\tmess: \"я купил дошик\",\n\t\t\t\tclass: \"a\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"anon\",\n\t\t\t\tmess: \"можно начать стартап\",\n\t\t\t\tclass: \"a\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"me\",\n\t\t\t\tmess: \"как тут кинуть в чс?\",\n\t\t\t\tclass: 'b'\n\t\t\t}\n\t\t]\n\t}\n\n\n\tconst [mess, setMess] = useState(null);\n\n\tfunction sayHello() {\n\t\tlist.add({\n\t\t\tfrom: \"me\",\n\t\t\tmess: mess,\n\t\t\tclass: 'b'\n\t\t})\n    console.log('Hello!');\n  }\n\n\n\n\treturn (\n\n\n\t\t\t<Panel id={id}>\n\t\t\t\t<PanelHeader>Messenger</PanelHeader>\n\t\t\t\t{fetchedUser &&\n\t\t\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Group>}\n\n\t\t\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t\t\t<Div className = \"message\">\n\t\t\t\t\t\t{list.list.map(el => (\n\t\t\t\t\t\t<h1 className = {el.class}> {el.mess} </h1>\n\n\n\n\n\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t<FormLayoutGroup mode=\"horizontal\">\n\n\t\t\t\t\t\t<Input type=\"text\" onChange={(e) => setMess(e.target.value)}placeholder=\"Введите сообщение\" style={{ width: 1000 }}/>\n\t\t\t\t\t\t<Button onClick={sayHello} before={<Icon24Send />}>\n\t\t          </Button>\n\t\t\t\t\t\t</FormLayoutGroup>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\n\t);\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} onClick={props.go}  data-to=\"info\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}