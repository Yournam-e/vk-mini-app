{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["activateLasers","list","push","from","mess","class","console","log","Home","id","fetchedUser","go","header","mode","before","photo_200","src","description","city","title","first_name","last_name","className","map","el","type","onClick","Persik","props","left","persik","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"2RAOA,SAASA,EAAeC,GAEtBA,EAAKC,KAAK,CACTC,KAAM,OACNC,KAAM,wCACNC,MAAO,MAERC,QAAQC,IAAIN,GAKd,IAgDeO,EAhDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAaT,EAAxB,EAAwBA,KAAxB,OAIZ,eAAC,IAAD,CAAOQ,GAAIA,EAAX,UACC,cAAC,IAAD,sBACCC,GACD,cAAC,IAAD,CAAOE,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,8CAAf,SACC,cAAC,IAAD,CACCC,OAAQJ,EAAYK,UAAY,cAAC,IAAD,CAAQC,IAAKN,EAAYK,YAAe,KACxEE,YAAaP,EAAYQ,MAAQR,EAAYQ,KAAKC,MAAQT,EAAYQ,KAAKC,MAAQ,GAFpF,mBAIKT,EAAYU,WAJjB,YAI+BV,EAAYW,eAI5C,cAAC,IAAD,CAAOT,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,gCAAf,SACC,eAAC,IAAD,CAAKS,UAAY,UAAjB,UACErB,EAAKA,KAAKsB,KAAI,SAAAC,GAAE,OACjB,qBAAIF,UAAaE,EAAGnB,MAApB,cAA6BmB,EAAGpB,KAAhC,UAOA,sBAAKkB,UAAU,YAAf,UACA,uBAAOA,UAAU,QAAQG,KAAK,SAC9B,uBAAOH,UAAU,SAASG,KAAK,SAASC,QAAS1B,EAAeC,iBC/CrD,MAA0B,mCCwB1B0B,G,OAhBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOnB,GAAImB,EAAMnB,GAAjB,UACC,cAAC,IAAD,CACCoB,KAAM,cAAC,IAAD,CAAiBH,QAASE,EAAMjB,GAAI,UAAQ,SADnD,oBAKA,qBAAKW,UAAU,SAASN,IAAKc,EAAQJ,QAASE,EAAMjB,GAAK,UAAQ,cC6CpDoB,EApDH,WACX,MAAsCC,mBAAS,QAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,MAAxC,mBAAOtB,EAAP,KAAoByB,EAApB,KACA,EAA4BH,mBAAS,cAAC,IAAD,CAAeI,KAAK,WAAzD,mBAAOC,EAAP,KAAeC,EAAf,KAiBAC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUpB,EAAkB,EAAlBA,KAAMqB,EAAY,EAAZA,KACnC,GAAa,yBAATrB,EAAiC,CACpC,IAAMsB,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM5C,EAAK,SAAA6C,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAM1B,YAAaA,EAAaI,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAM5B,GAAG,OAAOC,YAAaA,EAAaC,GAAIA,EAAIV,KAxCzC,CACZA,KAAK,CACJ,CACCE,KAAM,OACNC,KAAM,wCACNC,MAAO,KAER,CACCF,KAAM,KACNC,KAAM,uCACNC,MAAO,SA+BN,cAAC,EAAD,CAAQI,GAAG,SAASE,GAAIA,YC/C7B8B,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,cAAC,EAAD,IAASb,SAASc,eAAe,W","file":"static/js/main.32f877c5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nimport './Home.css';\n\nfunction activateLasers(list) {\n\n\t\tlist.push({\n\t\t\tfrom: \"anon\",\n\t\t\tmess: \"привет!\",\n\t\t\tclass: \"a\"\n\t\t})\n\t\tconsole.log(list)\n\t}\n\n\n\nconst Home = ({ id, go, fetchedUser, list }) => (\n\n\n\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div className = \"message\">\n\t\t\t\t{list.list.map(el => (\n\t\t\t\t<h1 className = {el.class}> {el.mess} </h1>\n\n\n\n\n\t\t\t\t))}\n\n\t\t\t\t<div className=\"input-div\">\n\t\t\t\t<input className=\"input\" type=\"text\"  ></input>\n\t\t\t\t<input className=\"button\" type='button' onClick={activateLasers(list)}></input>\n\t\t\t\t</div>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} onClick={props.go}  data-to=\"info\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst list = {\n\t\tlist:[\n\t\t\t{\n\t\t\t\tfrom: \"anon\",\n\t\t\t\tmess: \"привет!\",\n\t\t\t\tclass: \"a\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfrom: \"me\",\n\t\t\t\tmess: \"привет\",\n\t\t\t\tclass: 'b'\n\t\t\t}\n\t\t]\n\t}\n\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} list={list} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}